{"version":3,"sources":["components/News/News.module.css","components/Music/Music.module.css","components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/Contacts/Contact.module.css","components/Profile/ProfileInfo/FullName/FullName.module.css","components/Profile/ProfileInfo/AboutMe/AboutMe.module.css","components/Profile/ProfileInfo/LoockingForAJob/LoockingForAJob.module.css","components/Profile/Profile.module.css","components/Profile/Posts/Posts.module.css","components/Login/Login.module.css","components/Navbar/Navbar.module.css","components/FindUsers/Users/User/User.module.css","components/Navbar/Navbar.jsx","components/Dialogs/Message/MessageItem.jsx","components/Dialogs/ContactItem/ContactItem.jsx","components/Dialogs/NewMessage/NewMessage.jsx","redux/Dialogs-redu—Åer.tsx","components/Dialogs/NewMessage/NewMessageContainer.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/News/News.jsx","components/Music/Music.jsx","components/common/hooks.tsx","API/API.tsx","redux/Auth-reducer.tsx","redux/Profile-reducer.tsx","images/loader.svg","components/common/Preloader.jsx","images/edit.svg","components/Settings/SettingsItem/SettingsItem.tsx","components/Settings/Settings.tsx","redux/Users-reduser.tsx","images/user.png","components/common/FollowButton.tsx","components/FindUsers/Users/User/User.tsx","components/FindUsers/Users/Users.tsx","components/FindUsers/Users/UsersContainer.tsx","components/FindUsers/FindUsers.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/Contacts/Contact.tsx","components/Profile/ProfileInfo/FullName/FullName.tsx","components/Profile/ProfileInfo/AboutMe/AboutMe.tsx","components/Profile/ProfileInfo/LoockingForAJob/LoockingForAJob.tsx","images/close.svg","components/Profile/ProfileInfo/Avatar/AvatarModal.jsx","images/profileImage.png","components/Profile/ProfileInfo/Avatar/Avatar.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/NewPostForm/NewPostForm.tsx","components/Profile/Posts/SinglePost/SinglePost.tsx","components/Profile/Posts/Posts.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","images/logo.svg","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.jsx","App.js","reportWebVitals.js","redux/redux-store.tsx","index.js","components/Settings/Settings.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Settings/SettingsItem/SettingsItem.module.css","components/FindUsers/Users/Users.module.css","components/Profile/Posts/SinglePost/SinglePost.module.css","components/Profile/ProfileInfo/Avatar/Avatar.module.css","components/Dialogs/NewMessage/NewMessage.module.css","components/Profile/NewPostForm/NewPostForm.module.css","components/Header/Header.module.css"],"names":["module","exports","Navbar","className","s","nav","item","activeClassName","activeC","to","MessageItem","props","sender","messageWrapper","message","right","ContactItem","dialog","path","name","NewMessageFormContainer","reduxForm","form","onSubmit","handleSubmit","Field","component","NewMessage","wrapper","container","value","addMessage","ADD_MESSAGE","initialState","contactItemData","id","messageItemData","imSender","dialogsReducer","state","action","type","length","NewMessageContainer","connect","newMessageText","dialogsPage","Dialogs","ContactItems","map","contact","MessagesItems","isAuth","header","dialogsTitle","messagesTitle","dialogs","messagesWrapper","messages","DialogsContainer","userAuth","News","content","Music","useSelector","untypedSelector","instance","axios","create","withCredentials","baseURL","headers","UsersAPI","userId","post","delete","currentPage","pageSize","get","AuthAPI","then","res","data","ProfileAPI","status","put","profile","formData","SET_USER_AUTH_DATA","SET_USER_PROFILE","email","login","authProfile","setAuthUserProfile","authReducer","payload","ADD_POST","SET_USER_STATUS","postsData","text","likesCount","userStatus","addNewPost","setUserProfile","setUserStatus","getUserProfile","dispatch","a","console","log","updateUserStatus","resultCode","profileReducer","Preloader","src","preloader","alt","SettingsItem","useState","editMode","setEditMode","itemValue","inputValue","setInputValue","input","autoFocus","onBlur","setField","isContact","onChange","e","target","onClick","edit","Settings","isLoading","setIsLoading","useDispatch","authUserId","useEffect","Number","newProfile","contacts","contactsItems","Object","entries","prop","mainItems","title","submitButton","updateProfile","loading","FOLLOW_TOGGLE","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","IS_FETCHING_TOGGLE","FOLLOW_IN_PROGRESS","users","totalUsersCount","isFetching","followInProgress","followToggle","setFollowInProgress","setIsFetching","usersReducer","user","followed","page","totalCount","FollowButton","fallowButton","follow","User","leftSide","avatarImage","photos","small","userPhoto","rightSide","Users","count","Math","ceil","usersPage","pages","i","push","cintainer","setCurrentPage","UsersContainer","items","FindUsers","ProfileStatus","setStatus","onDoubleClick","Contact","PersonalInfoBlock","contactKey","href","FullName","foolName","fullName","AboutMe","aboutMe","LoockingForAJob","lookingForAJobDescription","AvatarModal","modalToggle","currentImage","setCurrentImage","inputRef","useRef","modal","close","modalBox","ref","files","FormData","append","Avatar","photo","isModal","setIsModal","avatar","profileImage","ProfileInfo","profilePage","large","AboutUserBlock","lookingForAJob","keys","NewPostForm","inputText","setInputText","postForm","hr","SinglePost","likes","Posts","posts","Profile","ProfileContainer","params","useParams","String","Header","logo","HeaderContainer","LoginContainer","placeholder","Login","App","userRes","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducers","combineReducers","store","createStore","applyMiddleware","thunk","window","ReactDOM","basename","process","bind","document","getElementById"],"mappings":"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","file":"static/js/main.0fee4239.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"News_content__J1Xhq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Music_content__-zHZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper__pmA8j\",\"header\":\"Dialogs_header__oFmnS\",\"dialogsTitle\":\"Dialogs_dialogsTitle__1MK_I\",\"messagesTitle\":\"Dialogs_messagesTitle__1SeGX\",\"activeC\":\"Dialogs_activeC__39_qr\",\"dialogs\":\"Dialogs_dialogs__2W5_2\",\"dialog\":\"Dialogs_dialog__1m1vV\",\"messages\":\"Dialogs_messages__1z_6b\",\"messageWrapper\":\"Dialogs_messageWrapper__25foe\",\"right\":\"Dialogs_right__8FFx8\",\"message\":\"Dialogs_message__3upM8\",\"messagesWrapper\":\"Dialogs_messagesWrapper__2WykB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PersonalInfoBlock\":\"Contact_PersonalInfoBlock__2EzkC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foolName\":\"FullName_foolName__3I-jI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutMe\":\"AboutMe_aboutMe__K812L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lookingForAJobDescription\":\"LoockingForAJob_lookingForAJobDescription__121sz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__zlHUh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Posts_wrapper__v1EM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__1FnXe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2bYRs\",\"activeC\":\"Navbar_activeC__1jKxL\",\"item\":\"Navbar_item__3EZGC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"User_container__6Yq4T\",\"avatarImage\":\"User_avatarImage__3SppT\",\"fallowButton\":\"User_fallowButton__1x-OV\",\"leftSide\":\"User_leftSide__3cga9\",\"name\":\"User_name__2avyD\",\"follow\":\"User_follow__f78xM\",\"rightSide\":\"User_rightSide__3NZuD\",\"status\":\"User_status__1QR6Y\",\"country\":\"User_country__12tjC\",\"city\":\"User_city__17088\"};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeC} to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeC} to=\"/dialogs\">Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeC} to=\"/news\">News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeC} to=\"/music\">Music</NavLink>\r\n            </div>\r\n\r\n            <hr/>\r\n\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeC} to=\"/find-users\">Find Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeC} to=\"/settings\">Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst MessageItem = (props) => {\r\n    if (props.sender){\r\n        return (\r\n                <div className={s.messageWrapper}>\r\n                    <div className={s.message}>\r\n                        <h1>{props.message}</h1>\r\n                    </div>\r\n                </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className={s.messageWrapper + ' ' + s.right}>\r\n                <div className={s.message}>\r\n                    <h1>{props.message}</h1>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst ContactItem = (props) => {\r\n    return (\r\n        <NavLink activeClassName={s.activeC} className={s.dialog} to={props.path}>\r\n            <h2>{props.name}</h2>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default ContactItem;","import React from 'react';\r\nimport s from './NewMessage.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nconst NewMessage = (props) => {\r\n\r\n    let addMessage = (value) => {\r\n        props.addMessage(value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.container}>\r\n                <NewMessageFormContainer onSubmit={addMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst NewMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'message'} component={'textarea'}/>\r\n            </div>\r\n            <div>\r\n                <button>Submit</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewMessageFormContainer = reduxForm({\r\n    form: 'newMessage'\r\n})(NewMessageForm)\r\n\r\nexport default NewMessage;\r\n","import {Reducer} from \"redux\";\r\n\r\nconst ADD_MESSAGE = 'Dialog-reducer/ADD-MESSAGE';\r\n\r\ntype TInitialState = {\r\n    contactItemData: {\r\n        id: number\r\n        name: string\r\n    }[]\r\n    messageItemData: {\r\n        id: number;\r\n        message: string;\r\n        imSender: boolean;\r\n    }[]\r\n}\r\n\r\nlet initialState = {\r\n    contactItemData: [\r\n        {id: 1, name: 'Nic'},\r\n        {id: 2, name: 'Jon'},\r\n        {id: 3, name: 'Alibaba'},\r\n        {id: 4, name: 'Artur'},\r\n        {id: 5, name: 'Josef'}\r\n    ],\r\n\r\n    messageItemData: [\r\n        {id: 1, message: 'message 1', imSender: false},\r\n        {id: 2, message: 'message 2', imSender: true},\r\n        {id: 3, message: 'message 3', imSender: false},\r\n        {id: 4, message: 'message 4', imSender: true},\r\n        {id: 5, message: 'message 5', imSender: true}\r\n    ],\r\n}\r\n\r\nconst dialogsReducer: Reducer<TInitialState, TActions> = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messageItemData: [...state.messageItemData, {\r\n                    id: state.messageItemData.length,\r\n                    message: action.message,\r\n                    imSender: true\r\n                }]\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype TActions = TAddMessageActionType\r\n\r\ntype TAddMessageActionType = {\r\n    type: typeof ADD_MESSAGE;\r\n    message: string;\r\n};\r\n\r\nexport const addMessage = (message: string): TAddMessageActionType => ({type: ADD_MESSAGE, message});\r\n\r\nexport default dialogsReducer;","\r\nimport NewMessage from \"./NewMessage\";\r\nimport {addMessage} from \"../../../redux/Dialogs-redu—Åer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n}\r\n\r\nconst NewMessageContainer = connect(mapStateToProps, {addMessage})(NewMessage);\r\n\r\n\r\nexport default NewMessageContainer;\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport MessageItem from \"./Message/MessageItem\";\r\nimport ContactItem from \"./ContactItem/ContactItem\";\r\nimport NewMessageContainer from \"./NewMessage/NewMessageContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let ContactItems = props.contactItemData\r\n        .map(contact => <ContactItem path={'/dialogs/' + contact.id}\r\n                                     name={contact.name}\r\n                                     key={contact.id}/>);\r\n\r\n    let MessagesItems = props.messageItemData\r\n        .map(message => <MessageItem message={message.message}\r\n                                     sender={message.imSender}\r\n                                     key={message.id}/>);\r\n\r\n    if (!props.isAuth) return <Redirect to='/login'/>\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n\r\n            <div className={s.header}>\r\n                <div className={s.dialogsTitle}><h1>Dialogs</h1></div>\r\n                <div className={s.messagesTitle}><h1>Messages</h1></div>\r\n            </div>\r\n\r\n            <div className={s.dialogs}>\r\n\r\n                {ContactItems}\r\n\r\n            </div>\r\n            <div className={s.messagesWrapper}>\r\n                <div className={s.messages}>\r\n\r\n                    { MessagesItems }\r\n\r\n                </div>\r\n\r\n                <NewMessageContainer/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        contactItemData: state.dialogsPage.contactItemData,\r\n        messageItemData: state.dialogsPage.messageItemData,\r\n        isAuth: state.userAuth.isAuth\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps)(Dialogs);\r\n\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={s.content}>News</div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={s.content}>Music</div>\r\n    )\r\n}\r\n\r\nexport default Music;","import { TypedUseSelectorHook, useSelector as untypedSelector } from 'react-redux';\r\nimport { GlobalStateType } from '../../redux/redux-store';\r\n\r\n\r\nexport const useSelector: TypedUseSelectorHook<GlobalStateType> = untypedSelector;","import axios from \"axios\";\r\nimport {IUser} from \"../redux/Users-reduser\";\r\nimport {IProfile} from \"../redux/Profile-reducer\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"6a3d7dc4-af78-46c4-84db-496fd8a61fd8\"\r\n    }\r\n});\r\n\r\ntype TFollowResponse = {\r\n    resultCode: number\r\n    messages: Array<string>,\r\n    data: object\r\n}\r\n\r\ntype TGetUsersResponse = {\r\n    items: Array<IUser>\r\n    totalCount: number\r\n\r\n}\r\n\r\nexport const UsersAPI = {\r\n\r\n    follow(userId: number) {\r\n        return instance.post<TFollowResponse>(`follow/` + userId, {})\r\n    },\r\n\r\n    unfollow(userId: number) {\r\n        return instance.delete<TFollowResponse>(`follow/` + userId)\r\n    },\r\n\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<TGetUsersResponse>(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n}\r\n\r\n\r\n\r\nexport type UserPayloadType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n}\r\n\r\ntype TResponse = {\r\n    resultCode: number\r\n    messages: string[]\r\n    data: UserPayloadType\r\n}\r\n\r\nexport const AuthAPI = {\r\n\r\n    getAuth() {\r\n        return instance.get<TResponse>('auth/me').then(res => res.data)\r\n    },\r\n}\r\n\r\ntype TUpdateStatusResponse = {\r\n    data: object,\r\n    messages: Array<string>,\r\n    fieldsErrors: Array<string>,\r\n    resultCode: number\r\n}\r\n\r\nexport const ProfileAPI = {\r\n    getProfile(userId: number | undefined) {\r\n        return instance.get<IProfile>(`profile/` + userId).then(res => res.data)\r\n    },\r\n\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/` + userId).then(res => res.data)\r\n    },\r\n\r\n    updateStatus(status: string) {\r\n        return instance.put<TUpdateStatusResponse>(`profile/status`, {status})\r\n    },\r\n\r\n    updateProfile(profile: IProfile) {\r\n        return instance.put<TUpdateStatusResponse>(`profile`, profile)\r\n    },\r\n\r\n    updateAvatar(formData: any) {\r\n        return instance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}","import {AuthAPI, ProfileAPI, UserPayloadType} from \"../API/API\";\r\nimport {Dispatch} from \"redux\";\r\nimport {IProfile} from \"./Profile-reducer\";\r\n\r\nconst SET_USER_AUTH_DATA = 'Auth-reducer/SET_USER_AUTH_DATA';\r\nconst SET_USER_PROFILE = 'Auth-reducer/SET_USER_PROFILE';\r\n\r\nexport type initialStateType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n    authProfile: IProfile | null\r\n}\r\n\r\nlet initialState: initialStateType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    authProfile: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action: ActionTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USER_AUTH_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuth: action.isAuth\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                authProfile: action.profile\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionTypes = TSetAuthUserData | TSetAuthUserProfile\r\n\r\nexport type TSetAuthUserData = {\r\n    type: typeof SET_USER_AUTH_DATA\r\n    payload: UserPayloadType\r\n    isAuth: boolean\r\n}\r\n\r\nexport type TSetAuthUserProfile = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: IProfile\r\n}\r\n\r\nexport const setAuthUserData = (payload: UserPayloadType, isAuth: boolean): TSetAuthUserData => (\r\n    {type: SET_USER_AUTH_DATA, payload, isAuth}\r\n);\r\n\r\nexport const setAuthUserProfile = (profile: IProfile): TSetAuthUserProfile => ({type: SET_USER_PROFILE, profile});\r\n\r\n\r\nexport const getAuthUserData = () =>\r\n    async (dispatch: Dispatch<ActionTypes | TSetAuthUserProfile>) => {\r\n        try {\r\n            const res = await AuthAPI.getAuth()\r\n            dispatch(setAuthUserData(res.data, res.resultCode === 0));\r\n            const userRes = await ProfileAPI.getProfile(Number(res.data.id));\r\n            dispatch(setAuthUserProfile(userRes))\r\n        } catch (err) {\r\n            console.log(err.message)\r\n        }\r\n    }\r\n\r\nexport default authReducer;","import {ProfileAPI} from \"../API/API\";\r\nimport {Dispatch, Reducer} from \"redux\";\r\nimport { setAuthUserProfile, TSetAuthUserProfile } from \"./Auth-reducer\";\r\n\r\nconst ADD_POST = 'Profile-reducer/ADD-POST';\r\nconst SET_USER_PROFILE = 'Profile-reducer/SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'Profile-reducer/SET_USER_STATUS';\r\n\r\nexport interface IInitialState {\r\n    postsData: {\r\n        id: number\r\n        text: string\r\n        likesCount: number\r\n    }[]\r\n\r\n    profile: IProfile | null\r\n\r\n    userStatus: string\r\n}\r\n\r\nexport type TContacts = {\r\n    github: string\r\n    vk: string | null\r\n    facebook: string | null\r\n    instagram: string | null\r\n    twitter: string | null\r\n    website: string | null\r\n    youtube: string | null\r\n    mainLink: string | null\r\n}\r\n\r\nexport interface IProfile {\r\n    userId?: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n    fullName: string | null\r\n    aboutMe: string | null\r\n\r\n    contacts: TContacts\r\n    photos?: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n}\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {id: 1, text: 'May the force be with you', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    userStatus: ''\r\n}\r\n\r\nconst profileReducer: Reducer<IInitialState, ActionsTypes> = (state = initialState, action: ActionsTypes) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                postsData: [\r\n                    ...state.postsData,\r\n                    {\r\n                        id: state.postsData.length,\r\n                        text: action.text,\r\n                        likesCount: 0\r\n                    }\r\n                ]\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                userStatus: action.status\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionsTypes = TAddNewPostType | TSetUserProfile | TSetUserStatus;\r\n\r\ntype TAddNewPostType = {\r\n    type: typeof ADD_POST\r\n    text: string\r\n}\r\ntype TSetUserProfile = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: IProfile\r\n}\r\ntype TSetUserStatus = {\r\n    type: typeof SET_USER_STATUS\r\n    status: string\r\n}\r\n\r\nexport const addNewPost = (text: string): TAddNewPostType => ({type: ADD_POST, text});\r\nexport const setUserProfile = (profile: IProfile): TSetUserProfile => ({type: SET_USER_PROFILE, profile});\r\nexport const setUserStatus = (status: string): TSetUserStatus => ({type: SET_USER_STATUS, status});\r\n\r\nexport const getUserProfile = (userId: number) =>\r\n    async (dispatch: Dispatch<TSetUserProfile>) => {\r\n        try {\r\n            const res = await ProfileAPI.getProfile(userId)\r\n            dispatch(setUserProfile(res));\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\nexport const getUserStatus = (userId: number) =>\r\n    async (dispatch: Dispatch<TSetUserStatus>) => {\r\n        try {\r\n            const res = await ProfileAPI.getStatus(userId);\r\n            dispatch(setUserStatus(res));\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\nexport const updateUserStatus = (status: string) =>\r\n    async (dispatch: Dispatch<TSetUserStatus>) => {\r\n        try {\r\n            const res = await ProfileAPI.updateStatus(status)\r\n            if (res.data.resultCode === 0)\r\n                dispatch(setUserStatus(status))\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\nexport const updateProfile = (profile: IProfile, id: number | undefined) =>\r\n    async (dispatch: Dispatch<TSetUserProfile | TSetAuthUserProfile>) => {\r\n        try {\r\n            await ProfileAPI.updateProfile(profile)\r\n            const res = await ProfileAPI.getProfile(id)\r\n            dispatch(setUserProfile(res))\r\n            dispatch(setAuthUserProfile(res))\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\nexport default profileReducer;","export default __webpack_public_path__ + \"static/media/loader.8c8fd53d.svg\";","import React from 'react';\r\nimport preloader from \"../../images/loader.svg\";\r\n\r\nexport const Preloader = (props) => {\r\n    return (\r\n        <>\r\n           <img src={preloader} alt={\"\"}/>\r\n        </>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/edit.b2fbfd27.svg\";","import React, {useState} from 'react';\r\nimport s from './SettingsItem.module.css';\r\nimport edit from './../../../images/edit.svg'\r\nimport {IProfile} from \"../../../redux/Profile-reducer\";\r\n\r\ntype TProps = {\r\n    name: string\r\n    itemValue: string | null\r\n    setField: (name: string, inputValue: string | null, isContact: boolean) => IProfile\r\n    isContact: boolean\r\n}\r\n\r\nexport const SettingsItem: React.FC<TProps> = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [inputValue, setInputValue] = useState(props.itemValue);\r\n\r\n    return <div className={s.item}>\r\n        <div className={s.name}><h1>{props.name}</h1></div>\r\n        {!editMode\r\n            ? <div\r\n                onClick={() => setEditMode(true)}\r\n                className={s.value}\r\n            >\r\n                <h1>{inputValue || <i>no info</i>}</h1>\r\n                <img\r\n                    src={edit} alt={''}\r\n                    onClick={() => setEditMode(true)}\r\n                />\r\n            </div>\r\n            : <input\r\n                className={s.input}\r\n                autoFocus={true}\r\n                onBlur={() => {\r\n                    setEditMode(false);\r\n                    props.setField(props.name, inputValue, props.isContact)\r\n                }}\r\n                onChange={(e) => setInputValue(e.target.value)}\r\n                value={inputValue || ''}\r\n            />}\r\n    </div>\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from \"../common/hooks\";\r\nimport {getUserProfile, IProfile, updateProfile} from \"../../redux/Profile-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Preloader} from \"../common/Preloader\";\r\nimport s from './Settings.module.css';\r\nimport {SettingsItem} from \"./SettingsItem/SettingsItem\";\r\nimport loading from './../../images/loader.svg';\r\n\r\nexport const Settings: React.FC = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const profile = useSelector(state => state.userAuth.authProfile)\r\n    const authUserId = useSelector(state => state.userAuth.id)\r\n\r\n    useEffect(() => {\r\n        if (authUserId)\r\n            dispatch(getUserProfile(Number(authUserId)));\r\n    }, [dispatch, authUserId])\r\n\r\n    if (!profile) return <Preloader/>\r\n\r\n    let newProfile: IProfile = {...profile, contacts: {...profile.contacts}};\r\n\r\n    const setField = (name: string, inputValue: string | null, isContact: boolean): IProfile => {\r\n        if (!isContact) {\r\n            newProfile = {...newProfile, [name]: inputValue, lookingForAJob: true};\r\n            return newProfile\r\n        } else {\r\n            newProfile = {...newProfile, contacts: {...newProfile?.contacts, [name]: inputValue}};\r\n            return newProfile\r\n        }\r\n    }\r\n\r\n    const contactsItems = Object.entries(profile.contacts).map(prop => {\r\n        return <SettingsItem\r\n            key={prop[0]}\r\n            name={prop[0]}\r\n            itemValue={prop[1]}\r\n            setField={setField}\r\n            isContact={true}\r\n        />\r\n    })\r\n\r\n    const mainItems = Object.entries(profile).map(prop => {\r\n        if (prop[0] !== \"contacts\" && prop[0] !== \"photos\" && prop[0] !== \"userId\") {\r\n            return <SettingsItem\r\n                key={prop[0]}\r\n                name={prop[0]}\r\n                itemValue={prop[1]}\r\n                setField={setField}\r\n                isContact={false}\r\n            />\r\n        } else {\r\n            return null\r\n        }\r\n    })\r\n\r\n\r\n    return <div>\r\n\r\n        <h1 className={s.title}>Main Information</h1>\r\n        <div className={s.wrapper}>{mainItems}</div>\r\n\r\n        <h1 className={s.title}>Contacts</h1>\r\n        <div className={s.wrapper}>{contactsItems}</div>\r\n\r\n        <button\r\n            className={s.submitButton}\r\n            onClick={() => {\r\n                setIsLoading(true)\r\n                dispatch(updateProfile(newProfile, Number(authUserId)))\r\n                setIsLoading(false)\r\n            }}\r\n        >Save {isLoading && <img alt={''} src={loading} className={s.loading}/>}\r\n        </button>\r\n\r\n    </div>\r\n}","import {UsersAPI} from \"../API/API\";\r\nimport {Dispatch, Reducer} from \"redux\";\r\n\r\nconst FOLLOW_TOGGLE = 'Users-reducer/FOLLOW-TOGGLE';\r\nconst SET_USERS = 'Users-reducer/SET-USERS';\r\nconst SET_CURRENT_PAGE = 'Users-reducer/SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'Users-reducer/SET_TOTAL_USERS_COUNT';\r\nconst IS_FETCHING_TOGGLE = 'Users-reducer/IS-FETCHING-TOGGLE';\r\nconst FOLLOW_IN_PROGRESS = 'Users-reducer/FOLLOW_IN_PROGRESS'\r\n\r\n\r\nexport type TInitialState = {\r\n    users: Array<IUser>\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followInProgress: boolean\r\n}\r\n\r\nexport interface IUser {\r\n    name: string\r\n    id: number\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n    status: string | null\r\n    followed: boolean\r\n}\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followInProgress: false\r\n}\r\n\r\nconst usersReducer: Reducer<TInitialState, TActions> = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case FOLLOW_TOGGLE:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((user: IUser) => {\r\n                    if (user.id === action.userId)\r\n                        return {...user, followed: !user.followed}\r\n                    return user\r\n                })\r\n            };\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            };\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page\r\n            };\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n\r\n        case IS_FETCHING_TOGGLE:\r\n            return {\r\n                ...state,\r\n                isFetching: !state.isFetching\r\n            }\r\n\r\n        case FOLLOW_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followInProgress: !state.followInProgress\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\ntype  TActions =\r\n    TFollow | TSetUser | TSetCurrentPage | TSetTotalUserCount | TSetIsFetching | TSetFollowInProgress\r\n\r\nexport type TFollow = {\r\n    type: typeof FOLLOW_TOGGLE\r\n    userId: number\r\n}\r\n\r\nexport type TSetUser = {\r\n    type: typeof SET_USERS\r\n    users: Array<IUser>\r\n}\r\n\r\nexport type TSetCurrentPage = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    page: number\r\n}\r\n\r\nexport type TSetTotalUserCount = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    totalCount: number\r\n}\r\n\r\nexport type TSetIsFetching = {\r\n    type: typeof IS_FETCHING_TOGGLE\r\n}\r\n\r\nexport type TSetFollowInProgress = {\r\n    type: typeof FOLLOW_IN_PROGRESS\r\n}\r\n\r\nexport const followToggle = (userId: number): TFollow => ({type: FOLLOW_TOGGLE, userId});\r\n\r\nexport const setFollowInProgress = (): TSetFollowInProgress => ({type: FOLLOW_IN_PROGRESS});\r\n\r\nexport const setUser = (users: Array<IUser>): TSetUser => ({type: SET_USERS, users});\r\n\r\nexport const setCurrentPage = (page: number): TSetCurrentPage => ({type: SET_CURRENT_PAGE, page});\r\n\r\nexport const setTotalUserCount = (totalCount: number): TSetTotalUserCount => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalCount\r\n});\r\n\r\nexport const setIsFetching = (): TSetIsFetching => ({type: IS_FETCHING_TOGGLE});\r\n\r\nexport default usersReducer;\r\n\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n    return async (dispatch: Dispatch<TSetIsFetching | TSetUser | TSetTotalUserCount>) => {\r\n        dispatch(setIsFetching());\r\n        try {\r\n            const res = await UsersAPI.getUsers(currentPage, pageSize)\r\n            dispatch(setIsFetching());\r\n            dispatch(setUser(res.data.items));\r\n            dispatch(setTotalUserCount(res.data.totalCount));\r\n        } catch (err) {\r\n            console.log(err.message)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const follow = (userId: number) => {\r\n    return async (dispatch: Dispatch<TFollow | TSetFollowInProgress>) => {\r\n        dispatch(setFollowInProgress());\r\n        try {\r\n            await UsersAPI.follow(userId)\r\n            dispatch(followToggle(userId));\r\n            dispatch(setFollowInProgress());\r\n            console.log('followed')\r\n        } catch (err) {\r\n            console.log(err.message);\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number) => {\r\n    return async (dispatch: Dispatch<TFollow | TSetFollowInProgress>) => {\r\n        dispatch(setFollowInProgress());\r\n        try {\r\n            await UsersAPI.unfollow(userId)\r\n            dispatch(followToggle(userId))\r\n            dispatch(setFollowInProgress());\r\n            console.log('unfollowed')\r\n        } catch (err) {\r\n            console.log(err.message)\r\n        }\r\n    }\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/user.a2446033.png\";","import React from 'react';\r\nimport s from \"../FindUsers/Users/User/User.module.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {follow, unfollow} from '../../redux/Users-reduser';\r\n\r\ntype TProps = {\r\n    id: number\r\n    followed: boolean\r\n    followInProgress: boolean\r\n}\r\n\r\nexport const FollowButton: React.FC<TProps> = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    if (!props.followInProgress)\r\n        return (\r\n            <button\r\n                className={s.fallowButton}\r\n                onClick={() => {\r\n                    props.followed\r\n                        ?dispatch(unfollow(props.id))\r\n                        :dispatch(follow(props.id))\r\n                    }\r\n                }\r\n            > {props.followed ? 'unfollow' : 'follow'}</button>\r\n        )\r\n    else\r\n        return <button className={s.fallowButton}>processing</button>\r\n}","import React from 'react';\r\nimport userPhoto from './../../../../images/user.png'\r\nimport s from \"./User.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {FollowButton} from \"../../../common/FollowButton\";\r\nimport {IUser} from \"../../../../redux/Users-reduser\";\r\n\r\ntype TProps = {\r\n    user: IUser\r\n    followInProgress: boolean\r\n}\r\n\r\nexport const User: React.FC<TProps> = (props) => {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className={s.container}>\r\n                <div className={s.leftSide}>\r\n                    <NavLink to={`/profile/` + props.user.id}>\r\n                        <img\r\n                            className={s.avatarImage}\r\n                            src={props.user.photos.small || userPhoto}\r\n                            alt={''}\r\n                        />\r\n                    </NavLink>\r\n                    <div className={s.follow}>\r\n\r\n                        <FollowButton\r\n                            id={props.user.id}\r\n                            followed={props.user.followed}\r\n                            followInProgress={props.followInProgress}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n                <div className={s.rightSide}>\r\n                    <h1 className={s.name}>{props.user.name}</h1>\r\n                    <h1 className={s.status}>{props.user.status}</h1>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport {Preloader} from \"../../common/Preloader\";\r\nimport User from \"./User/User\";\r\nimport {setCurrentPage, TInitialState} from '../../../redux/Users-reduser';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype TProps = {\r\n    usersPage: TInitialState\r\n}\r\n\r\nexport const Users: React.FC<TProps> = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let count = Math.ceil(props.usersPage.totalUsersCount / props.usersPage.pageSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= count; i++) {\r\n        if (i > 10) {\r\n            break;\r\n        }\r\n        pages.push(i);\r\n    }\r\n    return (\r\n        <div className={s.cintainer}>\r\n            <div>\r\n                {pages.map(page => {\r\n                    return <span\r\n                        key={page}\r\n                        onClick={() => dispatch(setCurrentPage(page))}\r\n                        className={\r\n                            props.usersPage.currentPage === page\r\n                                ? s.currentPage\r\n                                : s.pages\r\n                        }>\r\n                        {page}\r\n                    </span>\r\n                })}\r\n            </div>\r\n            {props.usersPage.isFetching ? <Preloader/> : null}\r\n            <div className={s.cintainer}>\r\n                {props.usersPage.users\r\n                    .map(user =>\r\n                        <User\r\n                            key={user.id}\r\n                            user={user}\r\n                            followInProgress={props.usersPage.followInProgress}\r\n                        />\r\n                    )}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}","import React, {useEffect} from 'react';\r\nimport {getUsers} from \"../../../redux/Users-reduser\";\r\nimport {Users} from \"./Users\";\r\nimport {useSelector} from \"../../common/hooks\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport const UsersContainer: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const usersPage = useSelector(state => state.usersPage)\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsers(usersPage.currentPage, usersPage.pageSize));\r\n    }, [usersPage.currentPage, usersPage.pageSize, dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <Users\r\n                usersPage={usersPage}\r\n            />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {UsersContainer} from \"./Users/UsersContainer\";\r\n\r\nconst FindUsers: React.FC = () => {\r\n\r\n    return (\r\n        <div>\r\n            <UsersContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FindUsers;","import React, {useState} from 'react';\r\n\r\ntype TProps = {\r\n    setUserStatus: (status: string) => void\r\n    updateUserStatus: (status: string) => void\r\n    userStatus: string\r\n}\r\n\r\nexport const ProfileStatus: React.FC<TProps> = (props) => {\r\n\r\n    const [status, setStatus] = useState<string>('');\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n            <div>\r\n                <h3 onDoubleClick={() => setEditMode(true)}>\r\n                    {props.userStatus === ''\r\n                        ? <i>have not status</i>\r\n                        : props.userStatus\r\n                    }\r\n                </h3>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onChange={(e) => setStatus(e.target.value)}\r\n                    autoFocus={true}\r\n                    onBlur={() => {\r\n                        setEditMode(false);\r\n                        if (status !== props.userStatus)\r\n                            props.updateUserStatus(status); // PUT request\r\n                    }}\r\n                    value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n","import React from 'react';\r\nimport s from './Contact.module.css';\r\n\r\ntype TProps = {\r\n    contactKey: string | null\r\n    contact: string | null\r\n}\r\n\r\nexport const Contact: React.FC<TProps> = (props) => {\r\n\r\n    if (props.contact) {\r\n        return (\r\n            <div className={s.PersonalInfoBlock}>\r\n                <h2><i>{props.contactKey}: </i>\r\n                    <a href={`https://` + props.contact || '#'}>{props.contact}</a>\r\n                </h2>\r\n            </div>\r\n        )\r\n    } else return null\r\n}","import React from \"react\";\r\nimport s from \"./FullName.module.css\";\r\n\r\ntype TProps = {\r\n    fullName: string | null\r\n}\r\n\r\nexport const FullName: React.FC<TProps> = (props) => {\r\n\r\n\r\n        return <div className={s.foolName}>\r\n            <h1>\r\n                {props.fullName}\r\n            </h1>\r\n        </div>\r\n    }","import React from \"react\";\r\nimport s from \"./AboutMe.module.css\";\r\n\r\ntype TProps = {\r\n    aboutMe: string | null\r\n}\r\n\r\nexport const AboutMe: React.FC<TProps> = (props) => {\r\n\r\n\r\n    return <div className={s.aboutMe}>\r\n        <h2><b>About me: </b>{props.aboutMe}</h2>\r\n    </div>\r\n}","import React from \"react\";\r\nimport s from \"./LoockingForAJob.module.css\";\r\n\r\ntype TProps = {\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n}\r\n\r\nexport const LoockingForAJob: React.FC<TProps> = (props) => {\r\n\r\n\r\n        return <div className={s.lookingForAJobDescription}>\r\n                <h2><b>Looking for a job: </b>\r\n                    {props.lookingForAJobDescription}\r\n                </h2>\r\n        </div>\r\n    }","export default __webpack_public_path__ + \"static/media/close.e45455dd.svg\";","import React, {useRef, useState} from 'react';\r\nimport s from './Avatar.module.css';\r\nimport close from './../../../../images/close.svg';\r\nimport {ProfileAPI} from \"../../../../API/API\";\r\n\r\nexport const AvatarModal = ({modalToggle}) => {\r\n\r\n    const [currentImage, setCurrentImage] = useState(null);\r\n    const inputRef = useRef(null)\r\n\r\n    const uploadPhoto = () => {\r\n        let formData = new FormData();\r\n        formData.append('image', currentImage)\r\n        ProfileAPI.updateAvatar(formData).then(res => console.log(res.data))\r\n        console.log(currentImage);\r\n    }\r\n\r\n    return <div className={s.modal}>\r\n        <img className={s.close} src={close} alt={'X'} onClick={modalToggle}/>\r\n        <div className={s.modalBox}>\r\n            <div><h3>Upload new Avatar</h3></div>\r\n            <input ref={inputRef} type={'file'} onChange={(e)=>setCurrentImage(e.target.files[0])}/>\r\n            <button onClick={uploadPhoto}>Upload</button>\r\n        </div>\r\n    </div>\r\n}","export default __webpack_public_path__ + \"static/media/profileImage.22d7f1c8.png\";","import React, {useState} from 'react';\r\nimport s from \"../ProfileInfo.module.css\";\r\nimport {AvatarModal} from './AvatarModal';\r\nimport profileImage from \"../../../../images/profileImage.png\";\r\n\r\nexport const Avatar: React.FC<{ photo: string | null | undefined}> = ({photo}) => {\r\n\r\n    const [isModal, setIsModal] = useState(false);\r\n\r\n    const modalToggle = () => {\r\n        setIsModal(!isModal);\r\n        console.log(`modal is ${isModal}`);\r\n    }\r\n\r\n    return <div>\r\n            <img\r\n                className={s.avatar}\r\n                src={photo || profileImage}\r\n                alt={\"\"}\r\n                onClick={() => modalToggle()}\r\n            />\r\n        {isModal && <AvatarModal modalToggle={modalToggle}/>}\r\n    </div>\r\n}","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\nimport {IProfile} from '../../../redux/Profile-reducer';\r\nimport {Preloader} from \"../../common/Preloader\";\r\nimport {Contact} from \"./Contacts/Contact\";\r\nimport {FullName} from \"./FullName/FullName\";\r\nimport {AboutMe} from './AboutMe/AboutMe';\r\nimport {LoockingForAJob} from './LoockingForAJob/LoockingForAJob';\r\nimport { Avatar } from './Avatar/Avatar';\r\n\r\ninterface IProps {\r\n    profilePage: {\r\n        profile: IProfile | null\r\n        postsData: {\r\n            id: number\r\n            text: string\r\n            likesCount: number\r\n        }[]\r\n        userStatus: string\r\n    }\r\n    setUserStatus: (status: string) => void\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\ntype TContactsArray = {\r\n    [key: string]: string | null\r\n}\r\n\r\nexport const ProfileInfo: React.FC<IProps> = (props) => {\r\n\r\n    if (!props.profilePage.profile)\r\n        return <Preloader/>\r\n\r\n    const {profile} = props.profilePage;\r\n    const contacts: TContactsArray = {...profile.contacts};\r\n\r\n    return (\r\n        <div className={s.PersonalInfoBlock}>\r\n\r\n            <div>\r\n                <Avatar photo={profile.photos?.large}/>\r\n\r\n                <div>\r\n                    <ProfileStatus\r\n                        setUserStatus={props.setUserStatus}\r\n                        updateUserStatus={props.updateUserStatus}\r\n                        userStatus={props.profilePage.userStatus}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={s.AboutUserBlock}>\r\n\r\n                <FullName\r\n                    fullName={profile.fullName}\r\n                />\r\n\r\n                <AboutMe\r\n                    aboutMe={profile.aboutMe}\r\n                />\r\n\r\n                <LoockingForAJob\r\n                    lookingForAJob={profile.lookingForAJob}\r\n                    lookingForAJobDescription={profile.lookingForAJobDescription}\r\n                />\r\n\r\n                <div>\r\n                    <h1>Contacts</h1>\r\n                    {Object.keys(contacts).map((contactKey) => {\r\n                        return <Contact\r\n                            key={contactKey}\r\n                            contactKey={contactKey}\r\n                            contact={contacts[contactKey]}\r\n                        />\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport s from './NewPostForm.module.css';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype TProps = {\r\n    addNewPost: (inputText: string) => void\r\n}\r\n\r\nexport const NewPostForm: React.FC<TProps>= (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [inputText, setInputText] = useState<string>('');\r\n\r\n    return (\r\n        <div className={s.postForm}>\r\n            <h1>My new post</h1>\r\n\r\n            <input\r\n                onChange={(e)=>setInputText(e.target.value)}\r\n                value={inputText}\r\n            />\r\n\r\n            <button onClick={() => dispatch(props.addNewPost(inputText))}>\r\n                Add Post\r\n            </button>\r\n\r\n            <hr className={s.hr}/>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport s from './SinglePost.module.css';\r\nimport {useSelector} from \"../../../common/hooks\";\r\n\r\nconst SinglePost: React.FC<{text: string, likesCount: number}> = (props) => {\r\n\r\n    const avatar = useSelector(state => state.userAuth.authProfile?.photos?.small)\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <img className={s.avatar} src={avatar || ''} alt={\"\"}/>\r\n            <div className={s.text}>\r\n                <h1>\r\n                    {props.text}\r\n                </h1>\r\n                <div className={s.likes}>\r\n                    Likes: {props.likesCount}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SinglePost;","import React from 'react';\r\nimport SinglePost from \"./SinglePost/SinglePost\";\r\nimport s from './Posts.module.css';\r\nimport {useSelector} from \"../../common/hooks\";\r\n\r\nexport const Posts: React.FC = () => {\r\n\r\n    const posts = useSelector(state => state.profilePage.postsData);\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <h2>News</h2>\r\n            {posts.map(post =>\r\n                <SinglePost\r\n                    text={post.text}\r\n                    likesCount={post.likesCount}\r\n                    key={post.id}\r\n                />\r\n            )}\r\n        </div>\r\n\r\n    );\r\n}","import React from 'react';\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport s from './Profile.module.css';\r\nimport {Preloader} from \"../common/Preloader\";\r\nimport {NewPostForm} from \"./NewPostForm/NewPostForm\";\r\nimport {Posts} from \"./Posts/Posts\";\r\nimport {IInitialState, setUserStatus, updateUserStatus} from \"../../redux/Profile-reducer\";\r\n\r\ninterface IProps {\r\n    profilePage: IInitialState\r\n    addNewPost: (inputText: string) => void\r\n    setUserStatus: (status: string) => void\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nconst Profile: React.FC<IProps> = (props) => {\r\n    if (!props.profilePage.profile) {\r\n        return <Preloader/>\r\n    } else {\r\n        return (\r\n            <div className={s.content}>\r\n\r\n                <ProfileInfo profilePage={props.profilePage}\r\n                             setUserStatus={setUserStatus}\r\n                             updateUserStatus={updateUserStatus} />\r\n\r\n\r\n                <NewPostForm addNewPost={props.addNewPost}/>\r\n\r\n                <Posts/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, {useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    addNewPost,\r\n    getUserProfile,\r\n    getUserStatus,\r\n    setUserStatus,\r\n    updateUserStatus\r\n} from \"../../redux/Profile-reducer\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {useSelector} from \"../common/hooks\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport const ProfileContainer = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const authUserId = useSelector(state => state.userAuth.id)\r\n\r\n    const params = useParams<{ userId?: string | undefined }>()\r\n    if (!params.userId) params.userId = String(authUserId);\r\n\r\n    const profilePage = useSelector(state => state.profilePage)\r\n    const isAuth = useSelector(state => state.userAuth.isAuth)\r\n\r\n    useEffect(() => {\r\n        if(isAuth) {\r\n            dispatch(getUserProfile(Number(params.userId)));\r\n            dispatch(getUserStatus(Number(params.userId)));\r\n        }\r\n    }, [params.userId, dispatch, isAuth])\r\n\r\n\r\n    if (!isAuth) return <Redirect to='/login'/>\r\n\r\n    return <Profile\r\n        profilePage={profilePage}\r\n        setUserStatus={setUserStatus}\r\n        updateUserStatus={updateUserStatus}\r\n        addNewPost={addNewPost}\r\n    />;\r\n\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.04c5a179.svg\";","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from './../../images/logo.svg'\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\nexport const Header: React.FC<PropsType> = ({isAuth, login}) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.logo}>\r\n                <img src={logo}  alt={\"\"}/>\r\n            </div>\r\n            <h1>\r\n                { isAuth ? login : <NavLink to='/login'>Login In</NavLink> }\r\n            </h1>\r\n        </header>\r\n    )\r\n}","import React from 'react';\r\nimport {Header} from \"./Header\";\r\nimport {useSelector} from \"../common/hooks\";\r\n\r\nexport const HeaderContainer: React.FC = () => {\r\n\r\n\r\n    const login = useSelector(state => state.userAuth.login)\r\n    const isAuth = useSelector(state => state.userAuth.isAuth)\r\n\r\n\r\n    return <Header isAuth={isAuth} login={login}/>\r\n}","import React from 'react';\r\nimport s from './Login.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nconst Login = (props) => {\r\n    return <div className={s.container}>\r\n        <h1>LOGIN</h1>\r\n        <LoginContainer/>\r\n    </div>\r\n}\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Login'} name={'email'} component={'input'}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} name={'password'} component={'input'}/>\r\n            </div>\r\n            <div>\r\n                <Field type={'checkbox'} name={'rememberMe'} component={'input'}/>\r\n            </div>\r\n            <button>Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginContainer = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\n\r\nexport default Login;","import './App.css';\r\nimport './Reset.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport {Settings} from \"./components/Settings/Settings\";\r\nimport React, {useEffect} from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\nimport FindUsers from \"./components/FindUsers/FindUsers\";\r\nimport {ProfileContainer} from \"./components/Profile/ProfileContainer\";\r\nimport {HeaderContainer} from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {getAuthUserData} from \"./redux/Auth-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getAuthUserData())\r\n    })\r\n\r\n    return (\r\n        <div className='appWrapper'>\r\n            <HeaderContainer/>\r\n            <Navbar/>\r\n            <div className=\"app-wrapper-content\">\r\n                <Route path=\"/dialogs\"\r\n                       render={() => <DialogsContainer/>\r\n                       }/>\r\n                <Route path=\"/profile/:userId?\"\r\n                       render={() => <ProfileContainer/>\r\n                       }/>\r\n                <Route path=\"/news\"\r\n                       render={() => <News/>}/>\r\n                <Route path=\"/music\"\r\n                       render={() => <Music/>}/>\r\n                <Route path=\"/find-users\"\r\n                       render ={() => <FindUsers />}/>\r\n                <Route path=\"/settings\"\r\n                       render={() => <Settings/>}/>\r\n                <Route path=\"/login\"\r\n                       render={() => <Login/>}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport dialogsReducer from \"./Dialogs-redu—Åer\";\r\nimport profileReducer from \"./Profile-reducer\";\r\nimport usersReducer from \"./Users-reduser\";\r\nimport authReducer from \"./Auth-reducer\";\r\nimport thunk from 'redux-thunk';\r\n\r\nlet rootReducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    userAuth: authReducer\r\n});\r\n\r\ntype RootReducersType = typeof rootReducers;\r\nexport type GlobalStateType = ReturnType<RootReducersType>\r\n\r\n\r\nlet store = createStore(rootReducers, applyMiddleware(thunk));\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./redux/redux-store\";\r\nimport {Provider} from \"react-redux\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Provider store={store}>\r\n                <App store={store} dispatch={store.dispatch.bind(store)}/>\r\n             </Provider>\r\n        </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Settings_form__1WMXi\",\"wrapper\":\"Settings_wrapper__2h7_a\",\"title\":\"Settings_title__2WdBp\",\"submitButton\":\"Settings_submitButton__15u-C\",\"loading\":\"Settings_loading__2zVZo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AboutUserBlock\":\"ProfileInfo_AboutUserBlock__2KM1z\",\"PersonalInfoBlock\":\"ProfileInfo_PersonalInfoBlock__2NDeb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SettingsItem_item__1e9Op\",\"name\":\"SettingsItem_name__2XTip\",\"value\":\"SettingsItem_value__1G5ZR\",\"input\":\"SettingsItem_input__3D0Gw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cintainer\":\"Users_cintainer__ivpiG\",\"leftSide\":\"Users_leftSide__3zRtw\",\"currentPage\":\"Users_currentPage__1jVwB\",\"pages\":\"Users_pages__2axKF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SinglePost_wrapper__2YsCy\",\"avatar\":\"SinglePost_avatar__3fHK1\",\"text\":\"SinglePost_text__28Izv\",\"likes\":\"SinglePost_likes__3ps4p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Avatar_modal__1IrCx\",\"modalBox\":\"Avatar_modalBox__1XgkU\",\"close\":\"Avatar_close__1_Rvc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NewMessage_wrapper__3PFWj\",\"container\":\"NewMessage_container__1e-Se\",\"textarea\":\"NewMessage_textarea__O2Fgy\",\"button\":\"NewMessage_button__3N4Lf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postForm\":\"NewPostForm_postForm__2lyLd\",\"textArea\":\"NewPostForm_textArea__170z5\",\"hr\":\"NewPostForm_hr__1vWFA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2GdBg\",\"logo\":\"Header_logo__bBtlC\",\"login\":\"Header_login__5dZN2\"};"],"sourceRoot":""}